---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=1&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:33:21 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 23c9ec01b6f4151f654547c0190aeebe.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - ODXDaUaBwr3S0WF_CLE8TeWnit6FJkpGuuhmRoaeXcdn05-Lkkw80w==
      Age:
      - '8'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:33:29 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=2&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:33:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 08f45c153a856ff7955174d0e6f60744.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - YOn_RasPTteNtt44-yJZJKi_yq8c0ZWnIfsuV7r1rxTF6F0OSG8vtA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:33:29 GMT
recorded_with: VCR 6.1.0
