---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=1&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:33:16 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 738984066968793a5714282f49fe0ab8.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 7QbvYcjPG2DPz8npXPXBlefGu3HOwY98pic6LNeYa69crXLm0UEucQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:33:16 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=2&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:33:16 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a497eba714f030335fd7adebea6fe8b6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - WwG0RAaN-GZDE04irnuVF4rbegbB3-WLaO5VFUg7LtHq4J3REzzJqw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:33:16 GMT
recorded_with: VCR 6.1.0
