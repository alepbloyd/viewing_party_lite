---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=1&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 26 Aug 2022 01:49:09 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 76a7fdbced88b6eccf433c4e386bae40.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - gix_zNJ3-LJZvo10MH-oQmpNMbLrlSjPVS2GVAhTOY3dTgvDkHnp8w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 26 Aug 2022 01:49:09 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=2&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 26 Aug 2022 01:49:09 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 38ecebcaa39c8742da2b6336935bb446.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - TThoyj_LWqvGti9s5ct0YqSuAlXpu4RFqBooQCsfVT4fik8B4Y2T-g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 26 Aug 2022 01:49:09 GMT
recorded_with: VCR 6.1.0
