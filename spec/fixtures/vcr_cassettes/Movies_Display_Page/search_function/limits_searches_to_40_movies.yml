---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=1&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:57:21 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c35f767218cbd1125d801b52fa785c8c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - rmAVg9qXonDxqUUAKJAeMTBtwLAke4wDwmxZ2nG-14y7xVis4qb_tQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:57:21 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=TMDB_KEY&include_adult=false&language=en-US&page=2&query=Long
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - TMDB_KEY
      User-Agent:
      - Faraday v2.5.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Sep 2022 01:57:22 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 10a9e9969f05a75cc05e6f70b8499f7e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAD89-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - Fn3L-au_RxSK5hWAZ1XAnNXxjIIxCYnSw6yrXugkhHycCU_I99ZpKg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Sep 2022 01:57:22 GMT
recorded_with: VCR 6.1.0
